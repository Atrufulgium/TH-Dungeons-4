using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics.CodeAnalysis;
using System.Linq;

namespace Atrufulgium.BulletScript.Compiler {
    /// <summary>
    /// Contains the result of compilation:
    /// <list type="bullet">
    /// <item>
    /// If <see cref="Succesful"/>, contains the resulting <see cref="BytecodeOutput"/>.
    /// This output can be requested with <see cref="TryGetBytecodeOutput(out BytecodeOutput)"/>.
    /// </item>
    /// <item>
    /// <see cref="Diagnostics"/> are always included, and may help discover
    /// why the compilation failed, if unsuccesful.
    /// </item>
    /// </list>
    /// </summary>
    public class CompilationResult {
        /// <summary>
        /// Whether compilation succeeded.
        /// </summary>
        public bool Succesful => Bytecode != null;
        internal BytecodeOutput? Bytecode { get; set; }

        /// <summary>
        /// All warnings and errors encountered during compilation.
        /// </summary>
        public ReadOnlyCollection<Diagnostic> Diagnostics { get; internal set; }

        internal CompilationResult(IList<Diagnostic> diagnostics)
            => Diagnostics = new(diagnostics);
        internal CompilationResult(IList<Diagnostic> diagnostics, BytecodeOutput bytecode)
            : this(diagnostics)
            => Bytecode = bytecode;

        /// <summary>
        /// If compilation was succesful, returns the generated bytecode
        /// in <paramref name="output"/>.
        /// </summary>
        public bool TryGetBytecodeOutput([NotNullWhen(true)] out BytecodeOutput? output) {
            output = null;
            if (Bytecode == null)
                return false;
            output = Bytecode;
            return true;
        }
    }
}
